{"version":3,"sources":["utils/dispatchTypes.ts","reducers/user/index.ts","reducers/index.ts","reducers/store.ts","utils/paths.ts","components/base/Loading/index.tsx","components/base/Button/index.tsx","components/base/Input/index.tsx","firebase.ts","actions/user/index.ts","actions/role/index.ts","utils/toasts.ts","components/LoginForm/index.tsx","utils/validators.ts","pages/Landing/index.tsx","components/base/Page/index.tsx","components/dashboard/DashboardImage/index.tsx","components/dashboard/DashboardGraph/index.tsx","pages/Dashboard/index.tsx","actions/dashboard/index.ts","components/settings/SettingElement/index.tsx","pages/Settings/index.tsx","actions/settings/index.ts","components/Navigator/NavigatorButton/index.tsx","components/Navigator/NavigatorUser/index.tsx","components/Navigator/index.tsx","pages/Main/index.tsx","containers/main/index.ts","App.tsx","index.tsx"],"names":["USER","initialState","user","undefined","state","action","type","rootReducer","combineReducers","middlewares","thunkMiddleware","store","createStore","reducers","applyMiddleware","INDEX_URL","DASHBOARD_URL","SETTINGS_URL","Loading","color","className","icon","faSpinner","Button","children","disabled","inverted","loading","loadingColor","onClick","text","Input","onChange","placeholder","value","useState","showPassword","setShowPassword","e","target","faEyeSlash","faEye","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","login","email","password","Promise","resolve","reject","auth","signInWithEmailAndPassword","then","res","uid","firestore","collection","doc","get","data","id","name","displayName","settingsId","settings","dashboardId","dashboard","role","catch","error","message","Error","options","position","toast","POSITION","TOP_RIGHT","Form","setLoading","setErrors","fields","setFields","dispatch","useDispatch","onChangeField","key","val","errs","test","hasErrors","validate","success","setTimeout","LandingPage","Page","title","DashboardImage","alt","src","DashboardGraph","DashboardPage","setDashboard","getState","useStore","loadDashboard","showGraph","showImage","useEffect","SettingElement","label","SettingsPage","setSettings","loadSettings","info","info2","storage","NavigatorButton","to","activeClassName","exact","NavigatorUser","Navigator","expanded","setExpanded","faCog","faTachometerAlt","faSignOutAlt","Main","isLoggedIn","path","render","component","withRouter","connect","bindActionCreators","MainPage","library","add","fas","App","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnHover","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa0d2016.chunk.js","sourcesContent":["export const USER = {\n  SET: 'USER_SET',\n};\n","import { USER } from '../../utils/dispatchTypes';\r\nimport { UserReducer, ActionTypes } from './types';\r\n\r\nconst initialState: UserReducer = {\r\n  user: undefined,\r\n};\r\n\r\nconst user = (state: UserReducer = initialState, action: ActionTypes): UserReducer => {\r\n  switch (action.type) {\r\n    case USER.SET:\r\n      return { ...state, user: action.user };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default user;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;\r\n","import thunkMiddleware from 'redux-thunk';\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport reducers from '.';\r\n\r\nconst middlewares = [ thunkMiddleware ];\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  applyMiddleware(...middlewares),\r\n);\r\n\r\nexport default store;\r\n","export const INDEX_URL = '/';\nexport const DASHBOARD_URL = '/dashboard';\nexport const SETTINGS_URL = '/settings';\n","import { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC } from 'react';\r\n\r\nimport { LoadingProps } from './types';\r\nimport './index.scss';\r\n\r\nconst Loading: FC<LoadingProps> = ({ color }) => (\r\n  <FontAwesomeIcon className={`loading ${color}`} icon={faSpinner} />\r\n);\r\n\r\nexport default Loading;\r\n","import React, { FC } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { ButtonProps } from './types';\nimport Loading from '../Loading';\n\nimport './index.scss';\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  className,\n  color = 'primary',\n  disabled,\n  icon,\n  inverted,\n  loading,\n  loadingColor = 'white',\n  onClick,\n  text,\n  type,\n}) => (\n  <button\n    className={`${className ? `${className} ` : ''}custom-btn btn-${color}${inverted ? ` btn-${color}-inverted` : ''}`}\n    disabled={disabled}\n    onClick={onClick}\n    type={type}\n  >\n    {icon && <FontAwesomeIcon icon={icon} />}\n    {text}\n    {children}\n    {loading && <Loading color={loadingColor} />}\n  </button>\n);\n\nexport default Button;\n","import React, { FC, useState } from 'react';\n\nimport { InputProps } from './types';\nimport './index.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\nconst Input: FC<InputProps> = ({\n  disabled,\n  onChange,\n  placeholder,\n  type,\n  value,\n}) => {\n  const [ showPassword, setShowPassword ] = useState(false);\n\n  return (\n    <div className=\"input-container\">\n      {placeholder && <p className=\"input-placeholder\">{placeholder}</p>}\n      <div>\n        <input\n          disabled={disabled}\n          onChange={(e) => onChange(e.target.value)}\n          type={showPassword && type === 'password' ? 'text' : type}\n\n          value={value}\n        />\n        {type === 'password' && (\n          <button\n          className=\"show-password-button\"\n          onClick={(): void => setShowPassword(!showPassword)}\n          type=\"button\"\n          >\n            <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import firebase from 'firebase';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DB_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n});\r\nfirebase.analytics();\r\n\r\nexport default firebase;\r\n","import firebase from '../../firebase';\r\nimport { UserType } from '../../utils/commonTypes';\r\n\r\nimport { getRoleById } from '../role';\r\n\r\nconst getUserById = (uid: string) => firebase.firestore().collection('users').doc(uid).get();\r\n\r\nexport const login = (email: string, password: string): Promise<UserType> => new Promise((resolve, reject) => {\r\n  if (email && password) {\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then((res) => {\r\n      if (res?.user?.uid) {\r\n        getUserById(res.user.uid).then((data) => {\r\n          const user = data.data();\r\n          const name = user?.name || res.user?.displayName || res.user?.email || '';\r\n          const settingsId = user?.settings?.id;\r\n          const dashboardId = user?.dashboard?.id;\r\n          if (user?.role?.id) {\r\n            getRoleById(user.role.id).then((role) => {\r\n              resolve({ name, settingsId, dashboardId, role });\r\n            }).catch((error) => {\r\n              reject(error.message);\r\n            });\r\n          } else {\r\n            resolve({ name, settingsId, dashboardId, role: 'Admin' });\r\n          }\r\n        });\r\n      } else {\r\n        resolve({ name: res.user?.displayName || res.user?.email || '', role: 'Admin' });\r\n      }\r\n    }).catch((error) => {\r\n      reject(error.message);\r\n    });\r\n  } else if (!email) {\r\n    reject(new Error('Wrong email'));\r\n  } else {\r\n    reject(new Error('Wrong password'));\r\n  }\r\n});\r\n","import firebase from '../../firebase';\r\n\r\nexport const getRoleById = (id: string): Promise<string> => new Promise((resolve, reject) => {\r\n  if (id) {\r\n    firebase.firestore().collection('roles').doc(id).get().then((data) => {\r\n      const role = data.data();\r\n      resolve(role?.name);\r\n    }).catch((error) => {\r\n      reject(error.message);\r\n    });\r\n  } else {\r\n    reject(new Error('id not sent'));\r\n  }\r\n});\r\n","import { toast } from 'react-toastify';\r\n\r\nconst options = {\r\n  className: 'custom-toast',\r\n  position: toast.POSITION.TOP_RIGHT,\r\n};\r\n\r\n/**\r\n * Shows a Success toast\r\n * @param {string} message text to show\r\n */\r\nexport const showSuccessToast = (message: string): void => {\r\n  toast.success(message, {\r\n    ...options,\r\n    className: `${options.className} toast-success`,\r\n  });\r\n};\r\n\r\n/**\r\n * Shows a Error toast\r\n * @param {string} message text to show\r\n */\r\nexport const showErrorToast = (message: string): void => {\r\n  toast.error(message, {\r\n    ...options,\r\n    className: `${options.className} toast-error`,\r\n  });\r\n};\r\n\r\n\r\n","import React, { FC, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '../base/Button';\nimport Input from '../base/Input';\nimport { FormFields, ErrorFields } from './types';\nimport { validateEmail } from '../../utils/validators';\nimport { login } from '../../actions/user';\nimport './index.scss';\nimport { USER } from '../../utils/dispatchTypes';\nimport { showErrorToast, showSuccessToast } from '../../utils/toasts';\n\nconst Form: FC = () => {\n  const [ loading, setLoading ] = useState(false);\n  const [ errors, setErrors ] = useState<ErrorFields>({});\n  const [ fields, setFields ] = useState<FormFields>({ email: '', password: '' });\n  const dispatch = useDispatch();\n\n  const onChangeField = (key: string, value: string): void => {\n    setFields({ ...fields, [key]: value });\n  };\n\n  const validate = (): ErrorFields => {\n    const errs: ErrorFields = {};\n\n    if (!fields?.email || !validateEmail(fields.email)) {\n      errs.hasErrors = true;\n      errs.email = true;\n    }\n\n    return errs;\n  };\n\n  const onLogin = () => {\n    const errs = validate();\n\n    setErrors(errs);\n    if (!errs.hasErrors) {\n      setLoading(true);\n      login(fields.email, fields.password).then((user) => {\n        dispatch({ type: USER.SET, user });\n        showSuccessToast(`Welcome ${user.name}`);\n        setTimeout(() => setLoading(false));\n      }).catch((error) => {\n        showErrorToast(error);\n        setLoading(false);\n      });\n    }\n  };\n\n  return (\n    <form className=\"login-form shadow\">\n      <h2>Sign in</h2>\n      <div className=\"login-form-fields\">\n        <Input\n          disabled={loading}\n          onChange={(val) => onChangeField('email', val)}\n          placeholder=\"Email\"\n          type=\"text\"\n          value={fields?.email}\n        />\n        <Input\n          disabled={loading}\n          onChange={(val) => onChangeField('password', val)}\n          placeholder=\"Password\"\n          type=\"password\"\n          value={fields?.password}\n        />\n      </div>\n      <Button\n        disabled={loading}\n        loading={loading}\n        onClick={onLogin}\n        text=\"Sign in\"\n        type=\"button\"\n      />\n    </form>\n  );\n};\n\nexport default Form;\n","/**\r\n * Email validation\r\n * @param {String} email\r\n */\r\nexport const validateEmail = (email: string): boolean => {\r\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return regex.test(email);\r\n};\r\n","import React, { FC, useState } from 'react';\n\nimport LoginForm from '../../components/LoginForm';\n\nimport './index.scss';\n\nconst LandingPage: FC = () => {\n  const [ loading, setLoading ] = useState(false);\n\n  return (\n    <div className=\"landing\">\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React, { FC } from 'react';\r\n\r\nimport { PageProps } from './types';\r\nimport './index.scss';\r\n\r\nconst Page: FC<PageProps> = ({ children, className, title }) => (\r\n  <div className=\"page\">\r\n    {!!title && <div className=\"page-header\">\r\n      <h2>{title}</h2>\r\n    </div>}\r\n    <div className={`page-content${className ? ` ${className}` : ''}`}>\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Page;\r\n","import React, { FC } from 'react';\r\n\r\nconst DashboardImage: FC = () => (<img\r\n  alt=\"dashboard image\"\r\n  className=\"dashboard-image\"\r\n  src=\"https://cdn.now.howstuffworks.com/media-content/0b7f4e9b-f59c-4024-9f06-b3dc12850ab7-1920-1080.jpg\"\r\n/>);\r\n\r\nexport default DashboardImage;\r\n","import React, { FC } from 'react';\r\n\r\nconst DashboardGraph: FC = () => (<img\r\n  alt=\"dashboard graph\"\r\n  className=\"dashboard-graph\"\r\n  src=\"https://learnenglish.britishcouncil.org/sites/podcasts/files/Writing-B2-A-summary-of-a-line-graph.png\"\r\n/>);\r\n\r\nexport default DashboardGraph;\r\n","import React, { FC, useEffect, useState } from 'react';\nimport { useStore } from 'react-redux';\n\nimport Page from '../../components/base/Page';\nimport { getUserDashboard } from '../../actions/dashboard';\nimport Loading from '../../components/base/Loading';\nimport DashboardImage from '../../components/dashboard/DashboardImage';\nimport DashboardGraph from '../../components/dashboard/DashboardGraph';\nimport { DashboardType } from '../../utils/commonTypes';\nimport './index.scss';\n\nconst DashboardPage: FC = () => {\n  const [ loading, setLoading ] = useState(false);\n  const [ dashboard, setDashboard ] = useState<DashboardType>({});\n  const { getState } = useStore();\n\n  const loadDashboard = () => {\n    const { user } = getState().user;\n\n    if (user?.dashboardId) {\n      setLoading(true);\n      getUserDashboard(user.dashboardId)\n        .then((data) => {\n          setDashboard(data);\n          setLoading(false);\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  useEffect(() => {\n    loadDashboard();\n  }, []);\n\n  return (\n    <Page title=\"Dashboard\" className=\"dashboard-page\">\n      {loading ? (\n        <Loading color=\"primary\" />\n      ) : (\n        <>\n          {!!dashboard?.showImage && <DashboardImage />}\n          {!!dashboard?.showGraph && <DashboardGraph />}\n        </>\n      )}\n    </Page>\n  );\n};\n\nexport default DashboardPage;\n","import firebase from '../../firebase';\r\nimport { DashboardType } from '../../utils/commonTypes';\r\n\r\nexport const getUserDashboard = (id: string): Promise<DashboardType> => new Promise((resolve, reject) => {\r\n  if (id) {\r\n    firebase.firestore().collection('dashboard').doc(id).get().then((data) => {\r\n      const dashboard = data.data();\r\n      resolve({ showGraph: dashboard?.showGraph, showImage: dashboard?.showImage });\r\n    }).catch((error) => {\r\n      reject(error.message);\r\n    });\r\n  } else {\r\n    reject(new Error('id not sent'));\r\n  }\r\n});\r\n","import React, { FC } from 'react';\r\n\r\nimport { SettingElementProps } from './types';\r\n\r\nconst SettingElement: FC<SettingElementProps> = ({ value, label }) => (\r\n  <div className=\"setting-element\">\r\n    {label}: <strong>{value}</strong>\r\n  </div>\r\n);\r\n\r\nexport default SettingElement;\r\n","import React, { FC, useEffect, useState } from 'react';\nimport { useStore } from 'react-redux';\n\nimport Page from '../../components/base/Page';\nimport { getUserSettings } from '../../actions/settings';\nimport Loading from '../../components/base/Loading';\nimport SettingElement from '../../components/settings/SettingElement';\nimport { SettingsType } from '../../utils/commonTypes';\nimport './index.scss';\n\nconst SettingsPage: FC = () => {\n  const [ loading, setLoading ] = useState(false);\n  const [ settings, setSettings ] = useState<SettingsType>({});\n  const { getState } = useStore();\n\n  const loadSettings = () => {\n    const { user } = getState().user;\n\n    if (user?.settingsId) {\n      setLoading(true);\n      getUserSettings(user.settingsId).then((data) => {\n        setSettings(data);\n        setLoading(false);\n      }).catch(() => {\n        setLoading(false);\n      });\n    }\n  };\n\n  useEffect(() => {\n    loadSettings();\n  }, []);\n\n  return (\n    <Page title=\"Settings\" className=\"settings-page\">\n      {loading ?\n        <Loading color=\"primary\" /> :\n        <>\n          {!!settings?.info && <SettingElement label=\"info\" value={settings.info} />}\n          {!!settings?.info2 && <SettingElement label=\"info2\" value={settings.info2} />}\n          {!!settings?.test && <SettingElement label=\"test\" value={settings.test} />}\n          {!!settings?.storage && <SettingElement label=\"storage\" value={settings.storage} />}\n        </>\n      }\n    </Page>\n  );\n};\n\nexport default SettingsPage;\n","import firebase from '../../firebase';\r\nimport { SettingsType } from '../../utils/commonTypes';\r\n\r\nexport const getUserSettings = (id: string): Promise<SettingsType> => new Promise((resolve, reject) => {\r\n  if (id) {\r\n    firebase.firestore().collection('settings').doc(id).get().then((data) => {\r\n      const settings = data.data();\r\n      resolve({ info: settings?.info, info2: settings?.info2, test: settings?.test, storage: settings?.storage });\r\n    }).catch((error) => {\r\n      reject(error.message);\r\n    });\r\n  } else {\r\n    reject(new Error('id not sent'));\r\n  }\r\n});\r\n","import React, { FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { NavigatorButtonProps } from './types';\r\nimport './index.scss';\r\n\r\nconst NavigatorButton: FC<NavigatorButtonProps> = ({ icon, onClick, title, to }) => (\r\n  <NavLink className=\"navigator-btn\" activeClassName=\"selected-btn\" exact onClick={onClick} to={to}>\r\n    {icon && <FontAwesomeIcon icon={icon} />} {title}\r\n  </NavLink>\r\n);\r\n\r\nexport default NavigatorButton;\r\n","import React, { FC } from 'react';\r\n\r\nimport { NavigatorUserProps } from './types';\r\nimport './index.scss';\r\n\r\nconst NavigatorUser: FC<NavigatorUserProps> = ({ name, role }) => (\r\n  <div className=\"user-info\">\r\n    <strong>{name}</strong>\r\n    <span>{role}</span>\r\n  </div>\r\n);\r\n\r\nexport default NavigatorUser;\r\n","import React, { FC, useState } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport NavigatorButton from './NavigatorButton';\r\nimport NavigatorUser from './NavigatorUser';\r\nimport { NavigatorProps } from './types';\r\nimport './index.scss';\r\nimport { DASHBOARD_URL, INDEX_URL, SETTINGS_URL } from '../../utils/paths';\r\nimport Button from '../base/Button';\r\nimport { USER } from '../../utils/dispatchTypes';\r\nimport { faCog, faSignOutAlt, faTachometerAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigator: FC<NavigatorProps> = ({ children, user }) => {\r\n  const [ expanded, setExpanded ] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: USER.SET });\r\n    setExpanded(false);\r\n  };\r\n\r\n  return !!user?.name ? (\r\n    <div className=\"navigator\">\r\n      <div className=\"navigator-topbar\">\r\n        <Button className=\"expand-btn\" onClick={() => setExpanded(!expanded)} type=\"button\">\r\n          <div />\r\n          <div />\r\n          <div />\r\n        </Button>\r\n        <h1>dashboard</h1>\r\n        <NavigatorUser name={user?.name} role={user?.role} />\r\n      </div>\r\n      <div className=\"navigator-content\">\r\n        <div className={`navigator-sidebar${expanded ? ' expanded shadow' : ''}`}>\r\n          <NavigatorButton icon={faCog} title=\"Settings\" onClick={() => setExpanded(false)} to={SETTINGS_URL} />\r\n          <NavigatorButton icon={faTachometerAlt} title=\"Dashboard\" onClick={() => setExpanded(false)} to={DASHBOARD_URL} />\r\n          <NavigatorButton icon={faSignOutAlt} title=\"Logout\" onClick={logout} to={INDEX_URL} />\r\n        </div>\r\n        <div className=\"navigator-children\">{children}</div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <>{children}</>\r\n  );\r\n};\r\n\r\nexport default Navigator;\r\n","import React, { FC } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { INDEX_URL, DASHBOARD_URL, SETTINGS_URL } from '../../utils/paths';\r\nimport LandingPage from '../Landing';\r\nimport DashboardPage from '../Dashboard';\r\nimport SettingsPage from '../Settings';\r\nimport Navigator from '../../components/Navigator';\r\n\r\nimport { MainProps } from './types';\r\n\r\nconst Main: FC<MainProps> = ({ user }) => {\r\n  const isLoggedIn = (): boolean => !!user?.name;\r\n  return (\r\n    <main>\r\n      <Navigator user={user}>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={DASHBOARD_URL}\r\n            render={() => isLoggedIn() ? <Route component={DashboardPage} /> : <Redirect to={INDEX_URL} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path={SETTINGS_URL}\r\n            render={() => isLoggedIn() ? <Route component={SettingsPage} /> : <Redirect to={INDEX_URL} />}\r\n          />\r\n          <Route\r\n            path={INDEX_URL}\r\n            render={() => isLoggedIn() ? <Redirect to={SETTINGS_URL} /> : <Route component={LandingPage} />}\r\n          />\r\n        </Switch>\r\n      </Navigator>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\n\r\nimport { StoreType } from '../../reducers/types';\r\nimport MainPage from '../../pages/Main';\r\n\r\nconst mapStateToProps = ({ user }: StoreType) => ({\r\n  user: user.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  ...bindActionCreators({}, dispatch),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainPage));\r\n","import React, { FC } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nimport store from './reducers/store';\nimport Main from './containers/main';\n\nlibrary.add(fas);\n\nconst App: FC = () => (\n  <Provider store={store}>\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={5000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      pauseOnHover\n      className=\"custom-toast\"\n    />\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}